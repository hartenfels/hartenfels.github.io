{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","pal","length","width","height","top","box","items","calculate","update","timeout","timer","window","clearTimeout","setTimeout","fixUpInputs","fix","match","exec","input","value","parseFloat","test","data","error","e","l","w","h","options","check","max","reduce","o","Math","totalBoxes","results","filter","bl","floor","bw","bh","al","aw","ah","totalItems","boxesLength","boxesWidth","boxesPerLayer","numberOfLayers","actualLength","actualWidth","actualHeight","usage","calculateUsage","volume","round","toFixed","debug","testing","configure","Promise","config","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n  constructor() {\n    this.pal = {\n      length : 120,\n      width  : 80,\n      height : 15,\n      top    : 195,\n    };\n\n    this.box = {\n      length : 30,\n      width  : 40,\n      height : 20,\n      items  : 1,\n    };\n\n    this.calculate();\n  }\n\n\n  update(timeout) {\n    if (this.timer) {\n      window.clearTimeout(this.timer);\n    }\n\n    this.timer = window.setTimeout(() => {\n      this.timer = null;\n      this.calculate();\n    }, timeout);\n\n    return true;\n  }\n\n\n  fixUpInputs() {\n    let fix = input => {\n      let match = /^\\s*([0-9]+)([,.]([0-9]+))?\\s*$/.exec(input);\n\n      if (match) {\n        let value = parseFloat(`${match[1]}.${match[3] || 0}`);\n\n        if (value <= 0) {\n          throw 'Eingaben müssen größer als 0 sein.';\n        }\n\n        return value;\n      }\n      else if (/^\\s*$/.test(input)) {\n        throw 'Eingaben dürfen nicht leer sein.';\n      }\n\n      throw `Ungültige Eingabe: \"${input}\"`;\n    };\n\n    return {\n      pal : {\n        length : fix(this.pal.length),\n        width  : fix(this.pal.width ),\n        height : fix(this.pal.height),\n        top    : fix(this.pal.top   ),\n      },\n      box : {\n        length : fix(this.box.length),\n        width  : fix(this.box.width ),\n        height : fix(this.box.height),\n        items  : fix(this.box.items ),\n      }\n    };\n  }\n\n\n  calculate() {\n    let data;\n\n    try {\n      this.error = null;\n      data       = this.fixUpInputs();\n    }\n    catch (e) {\n      this.error = e;\n      return;\n    }\n\n    let l = data.box.length;\n    let w = data.box.width;\n    let h = data.box.height;\n\n    let options = [\n      this.check(data, l, w, h),\n      this.check(data, l, h, w),\n      this.check(data, w, l, h),\n      this.check(data, w, h, l),\n      this.check(data, h, l, w),\n      this.check(data, h, w, l),\n    ];\n\n    let max      = options.reduce((max, o) => Math.max(max, o.totalBoxes), 0);\n    this.results = options.filter(o => o.totalBoxes > 0 && o.totalBoxes >= max);\n  }\n\n\n  check(data, l, w, h) {\n    let bl = Math.floor(data.pal.length / l);\n    let bw = Math.floor(data.pal.width  / w);\n    let bh = Math.floor((data.pal.top - data.pal.height) / h);\n\n    let al = bl * l;\n    let aw = bw * w;\n    let ah = bh * h;\n\n    return {\n      length         : l,\n      width          : w,\n      height         : h,\n      totalBoxes     : bl * bw * bh,\n      totalItems     : bl * bw * bh * data.box.items,\n      boxesLength    : bl,\n      boxesWidth     : bw,\n      boxesPerLayer  : bl * bw,\n      numberOfLayers : bh,\n      actualLength   : al,\n      actualWidth    : aw,\n      actualHeight   : ah,\n      usage          : this.calculateUsage(data, al * aw * ah),\n    };\n  }\n\n\n  calculateUsage(data, volume) {\n    let max = data.pal.length * data.pal.width * (data.pal.top - data.pal.height);\n    return (Math.round(volume / max * 10000) / 100).toFixed(2);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":".."}